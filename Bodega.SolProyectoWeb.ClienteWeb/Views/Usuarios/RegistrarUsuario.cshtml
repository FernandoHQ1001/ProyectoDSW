@model Bodega.SolProyectoWeb.Entidades.Core.Usuario

@{
    ViewBag.Title = "RegistrarUsuario";
    ViewBag.CargoList = new SelectList(new List<SelectListItem>
{
        new SelectListItem { Value = "Encargado de inventario", Text = "Encargado de inventario" },
        new SelectListItem { Value = "Encargado de ventas", Text = "Encargado de ventas" },
        new SelectListItem { Value = "Administrador", Text = "Administrador" }
    }, "Value", "Text");
}

<div class="registrar-usuario-container">

    <div class="header-container">
        <img src="~/Content/dist/img/TodoEnUno_SinFondo.png" alt="Logo imagen" class="logo-image" />
        <h2>REGISTRAR USUARIO</h2>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-section">
            @Html.ValidationSummary(true, "Por favor, rellene todos los campos requeridos.", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.nombre, "Nombres: ", htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control rounded-input" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    <label for="dni" class="form-label">DNI: </label>
                    @Html.TextBoxFor(model => model.dni, new { @class = "form-control rounded-input", maxlength = "8", minlength = "8", pattern = @"\d{8}", title = "El DNI debe tener exactamente 8 dígitos.", required = "required" })
                    @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.apellido, "Apellidos: ", htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control rounded-input" } })
                    @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.correo, "Correo: ", htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control rounded-input" } })
                    @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.telefono, "Teléfono: ", htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control rounded-input" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.cargo, "Cargo: ", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.cargo, ViewBag.CargoList as SelectList, "Seleccione aquí", new { @class = "form-control rounded-input" })
                    @Html.ValidationMessageFor(model => model.cargo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.contrasena, "Contraseña: ", htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.contrasena, new { htmlAttributes = new { @class = "form-control rounded-input" } })
                    @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="buttons text-center mt-4">
                <button type="submit" class="btn btn-primary">Registrar</button>
                <a href="@Url.Action("Index", "Usuarios")" class="btn btn-secondary">Regresar</a>
            </div>
        </div>
    }
</div>

@if (ViewBag.DniExistente != null && (bool)ViewBag.DniExistente)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Error</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>El usuario ya existe en el sistema.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="window.location.href='@Url.Action("RegistrarUsuario", "Usuarios")'">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (ViewBag.RegistroExitoso != null && (bool)ViewBag.RegistroExitoso)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">¡Registro exitoso!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>El usuario se ha registrado correctamente.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="window.location.href='@Url.Action("RegistrarUsuario", "Usuarios")'">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (TempData["MensajeExitoso"] != null)
{
    <div class="modal-background" id="modal-confirmacion" style="display: flex;">
        <div class="confirmation">
            <p>@TempData["MensajeExitoso"]</p>
            <button onclick="cerrarModalYRedirigir('@Url.Action("RegistrarUsuario", "Usuarios")')">Aceptar</button>
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="modal-background" id="modal-error" style="display: flex;">
        <div class="confirmation">
            <p>@TempData["Error"]</p>
            <button onclick="cerrarModal()">Aceptar</button>
        </div>
    </div>
}

<script>

    document.getElementById("dni").addEventListener("input", function () {
        if (this.value.length > 8) {
            this.value = this.value.slice(0, 8); // Limitar a 8 caracteres
        }
    });
    function cerrarModalYRedirigir(url) {
        const modal = document.getElementById("modal-confirmacion");
        if (modal) {
            modal.style.display = "none"; // Oculta el modal
        }
        window.location.href = url; // Redirige a la URL proporcionada
    }

    // Función para cerrar el modal de error
    function cerrarModal() {
        const modal = document.getElementById("modal-error");
        if (modal) {
            modal.style.display = "none"; // Oculta el modal
        }
    }
</script>

<style>
    .registrar-usuario-container {
        background: url('/path/to/background.jpg') center/cover no-repeat;
        padding: 20px;
        border-radius: 8px;
        color: #333;
        max-width: 1200px;
        margin: 0 auto;
    }

    .header-container {
        background-color: #ffcd00;
        padding: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        color: #333;
        position: relative;
        margin-bottom: 20px;
    }

        .header-container h2 {
            margin: 0;
            font-size: 1.5rem;
            color: #333;
            flex-grow: 1;
            text-align: center;
        }

    .logo-image {
        position: absolute;
        left: 10px; /* Fija la imagen a la izquierda del contenedor */
        max-width: 150px;
        height: auto;
    }

    h2 {
        background-color: #ffcd00;
        padding: 10px;
        text-align: center;
        color: #333;
        border-radius: 8px;
    }

    .form-group label {
        font-weight: bold;
    }

    .header h2 {
        font-weight: bold;
        font-size: 24px;
        text-align: center;
        background-color: #FFC107;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 5px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 10px;
    }

    .form-group {
        flex: 1;
    }

    .form-label {
        font-weight: bold;
    }

    .buttons {
        display: flex;
        justify-content: center;
        gap: 20px;
    }

    .btn-primary, .btn-secondary {
        width: 200px;
    }

    .btn-primary {
        background-color: #007BFF;
        border-color: #007BFF;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    /* Estilo para el modal */
    .modal-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .confirmation {
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        width: 400px;
        text-align: center;
    }

        .confirmation p {
            margin-bottom: 20px;
            font-size: 18px;
        }

        .confirmation button {
            padding: 10px 20px;
            background-color: #1d3782;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .confirmation button:hover {
                background-color: #0f2460;
            }
</style>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation.unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
