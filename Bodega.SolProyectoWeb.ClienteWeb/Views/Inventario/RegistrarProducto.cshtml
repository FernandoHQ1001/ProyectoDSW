@model Bodega.SolProyectoWeb.Entidades.Core.Producto

@{
    ViewBag.Title = "RegistrarProducto";
}

<div class="registro-producto-container">
    <!-- Encabezado -->
    <div class="header-container">
        <h2>REGISTRAR PRODUCTO</h2>
    </div>

    <form method="post" class="form-horizontal">
        @Html.AntiForgeryToken()

        <!-- Producto y Precio -->
        <div class="form-group-row">
            <div class="form-group">
                <label>Producto:</label>
                @Html.TextBoxFor(m => m.nombre, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.nombre)
            </div>
            <div class="form-group">
                <label>Precio:</label>
                @Html.TextBoxFor(m => m.precio, new { @class = "form-control", type = "number", step = "0.01" })
                @Html.ValidationMessageFor(m => m.precio)
            </div>
        </div>

        <!-- Categoría y Stock (usuario temporal) -->
        <div class="form-group-row">
            <div class="form-group">
                <label>Categoría:</label>
                @Html.DropDownListFor(m => m.id_categoria, (SelectList)ViewBag.Categorias, "Seleccionar categoría", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.id_categoria)
            </div>
            <div class="form-group">
                <label>Stock:</label>
                @Html.TextBoxFor(m => m.stock, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(m => m.stock)
            </div>

            <div class="form-group">
                <label>Usuario:</label>
                @Html.TextBoxFor(m => m.id_usuario, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.id_usuario)
            </div>
        </div>

        <!-- Descripción -->
        <div class="form-group">
            <label>Descripción:</label>
            @Html.TextAreaFor(m => m.descripcion, new { @class = "form-control", rows = 3 })
            @Html.ValidationMessageFor(m => m.descripcion)
        </div>

        <!-- Botones -->
        <div class="form-group">
            <button type="submit" class="btn btn-success">Registrar</button>
            <button type="button" class="btn btn-secondary" onclick="limpiarFormulario()">Cancelar</button>
        </div>
    </form>
</div>

<div class="modal-background" id="modal-confirmacion" style="display: none;">
    <div class="confirmation">
        <p>@ViewBag.MensajeExitoso</p>
        <button onclick="cerrarModal()">Aceptar</button>
    </div>
</div>

<!-- Modal de error por nombre duplicado -->
<div class="modal-background" id="modal-error-nombre" style="display: none;">
    <div class="confirmation">
        <p>@ViewBag.ErrorNombreExistente</p>
        <button onclick="cerrarModalError()">Aceptar</button>
    </div>
</div>
<!-- Modal de error por falta de campos -->
<div class="modal-background" id="modal-error-campos" style="display: none;">
    <div class="confirmation">
        <p>Complete todos los campos obligatorios.</p>
        <button onclick="cerrarModalCampos()">Aceptar</button>
    </div>
</div>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        // Mostrar el modal de éxito si ViewBag.MensajeExitoso está definido
        if ("@ViewBag.MensajeExitoso" !== "") {
            document.getElementById("modal-confirmacion").style.display = "flex";
        }

        // Mostrar el modal de error si ViewBag.ErrorNombreExistente está definido
        if ("@ViewBag.ErrorNombreExistente" !== "") {
            document.getElementById("modal-error-nombre").style.display = "flex";
        }
        if ("@ViewBag.ModelStateError" !== "") {
            document.getElementById("modal-error-campos").style.display = "flex";
        }
        document.querySelector("form").addEventListener("submit", function (event) {
            var producto = document.querySelector("[name='nombre']").value;
            var precio = document.querySelector("[name='precio']").value;
            var categoria = document.querySelector("[name='id_categoria']").value;
            var stock = document.querySelector("[name='stock']").value;
            var descripcion = document.querySelector("[name='descripcion']").value;

            // Verificar si algún campo obligatorio está vacío
            if (!producto || !precio || !categoria || !stock || !descripcion) {
                event.preventDefault(); // Evitar el envío del formulario

                // Mostrar el modal de error por campos faltantes
                document.getElementById("modal-error-campos").style.display = "flex";
            }
        });
    });

    function cerrarModal() {
        document.getElementById("modal-confirmacion").style.display = "none";
        // Redirige después de cerrar el modal
        window.location.href = '@Url.Action("RegistrarProducto", "Inventario")';
    }

    function cerrarModalError() {
        document.getElementById("modal-error-nombre").style.display = "none";
    }
    function cerrarModalCampos() {
        document.getElementById("modal-error-campos").style.display = "none";
    }
    function limpiarFormulario() {
        const formulario = document.querySelector("form");
        formulario.reset(); // Limpia todos los campos del formulario
    }

</script>

<style>
    .registro-producto-container {
        background: url('/path/to/background.jpg') center/cover no-repeat;
        padding: 20px;
        border-radius: 8px;
        color: #333;
        max-width: 1200px;
        margin: 0 auto;
    }

    .header-container {
        background-color: #F7C367;
        padding: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        color: #333;
        position: relative;
        margin-bottom: 20px;
    }

    .header-container h2 {
        margin: 0;
        font-size: 1.5rem;
        color: #333;
        flex-grow: 1;
        text-align: center;
    }

    .logo-image {
        position: absolute;
        left: 10px; /* Fija la imagen a la izquierda del contenedor */
        max-width: 150px;
        height: auto;
    }

    /* Modal */
    .modal-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .confirmation {
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        width: 400px;
        text-align: center;
    }

    .confirmation p {
        margin-bottom: 20px;
        font-size: 18px;
        color: #333;
    }

    .confirmation button {
        padding: 10px 20px;
        background-color: #1D3782;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    .confirmation button:hover {
        background-color: #0f2460;
    }

    h2 {
        background-color: #F7C367;
        padding: 10px;
        text-align: center;
        color: #333;
        border-radius: 8px;
    }

    .form-group label {
        font-weight: bold;
    }

    .form-group {
        display: flex; /* Usa Flexbox para alinear el contenido */
        align-items: center; /* Centra verticalmente los elementos */
        justify-content: center; /* Centra horizontalmente el contenido */
        gap: 30px; /* Espacio entre el label y el input */
        margin-bottom: 30px;
    }

    /* Botones */

    .btn-primary {
        background-color: #B0C0CD;
        border-color: #B0C0CD;
        color: black;
        font-weight: bold;
        margin-right: 5px;
    }

    .btn-success {
        background-color: #B0C0CD; /* Gris */
        border-color: #B0C0CD;
        color: black;
        font-weight: bold;
        transition: background-color 0.3s ease; /* Suaviza el cambio de color */
    }

    .btn-success:hover {
        background-color: #003d80; /* Azul oscuro */
        border-color: #003d80;
    }

    .btn-secondary {
        background-color: #B0C0CD; /* Gris */
        border-color: #B0C0CD;
        color: black;
        font-weight: bold;
        transition: background-color 0.3s ease; /* Suaviza el cambio de color */
    }

    .btn-secondary:hover {
        background-color: #002952; /* Azul oscuro */
        border-color: #002952;
    }

    .table th, .table td {
        text-align: center;
    }

    .form-group-row {
        display: flex;
        justify-content: space-between;
        gap: 20px; /* Espacio entre los dos campos */
        margin-bottom: 15px; /* Espacio inferior para separar de otros elementos */
    }

    .form-group-row .form-group {
        flex: 1;
        min-width: 0;
    }

    .form-group-row .form-group label {
        font-weight: bold;
    }
</style>